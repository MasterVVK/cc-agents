#!/usr/bin/env python
"""–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ"""

from app import create_app, db
from app.models import User, Application, Conversation, Message
from app.tasks.chat_tasks import process_chat_message

app = create_app()

with app.app_context():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —á–∞—Ç–∞\n")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–º–æ—â–Ω–∏–∫–∞
    user = User.query.filter_by(username='test_user').first()
    assistant = Application.query.filter_by(name='–ü–æ–º–æ—â–Ω–∏–∫ —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏').first()
    
    if not user or not assistant:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ –ø–æ–º–æ—â–Ω–∏–∫")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ test_assistant.py –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        exit(1)
    
    print(f"‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
    print(f"‚úì –ü–æ–º–æ—â–Ω–∏–∫: {assistant.name}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
    conversation = Conversation(
        assistant_id=assistant.id,
        user_id=user.id,
        title="–¢–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–æ–≥",
        status='active'
    )
    db.session.add(conversation)
    db.session.commit()
    print(f"‚úì –°–æ–∑–¥–∞–Ω –¥–∏–∞–ª–æ–≥ ID: {conversation.id}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    test_message = Message(
        conversation_id=conversation.id,
        role='user',
        content='–ö–∞–∫ –º–Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ?'
    )
    db.session.add(test_message)
    db.session.commit()
    print(f"‚úì –°–æ–∑–¥–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ID: {test_message.id}")
    
    print("\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É...")
    print(f"   –¢–µ–∫—Å—Ç: '{test_message.content}'")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∞
    try:
        result = process_chat_message(
            conversation_id=conversation.id,
            message_id=test_message.id
        )
        
        print("\nüì• –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
        print(f"   –°—Ç–∞—Ç—É—Å: {result.get('status')}")
        
        if result['status'] == 'success':
            print(f"   –û—Ç–≤–µ—Ç: {result.get('message', '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞')[:200]}...")
            print(f"   –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {result.get('search_results_count', 0)}")
            print(f"   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: {result.get('tokens_used', 0)}")
            print(f"   –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {result.get('processing_time', 0):.2f} —Å–µ–∫")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î
            assistant_message = Message.query.filter_by(
                conversation_id=conversation.id,
                role='assistant'
            ).first()
            
            if assistant_message:
                print(f"\n‚úÖ –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î")
                print(f"   ID —Å–æ–æ–±—â–µ–Ω–∏—è: {assistant_message.id}")
            else:
                print(f"\n‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î")
                
        else:
            print(f"   –û—à–∏–±–∫–∞: {result.get('message')}")
            
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")
        import traceback
        traceback.print_exc()
    
    print("\n" + "="*50)
    print("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("\n–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—É—â–µ–Ω FastAPI —Å–µ—Ä–≤–∏—Å (–ø–æ—Ä—Ç 8002)")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—É—â–µ–Ω Qdrant (–ø–æ—Ä—Ç 6333)")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—É—â–µ–Ω Ollama —Å –º–æ–¥–µ–ª—å—é")
    print("4. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –ø–æ–º–æ—â–Ω–∏–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞")