#!/usr/bin/env python
"""–ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±–µ–∑ Celery"""

from app import create_app, db
from app.models import User, Application, Conversation, Message
import requests

app = create_app()

def simple_chat_response(assistant, user_message):
    """–ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ –±–µ–∑ Celery"""
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–º–ø—Ç
    prompt = f"""–¢—ã - {assistant.name}. {assistant.get_system_prompt()}

–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_message}

–î–∞–π –ø–æ–ª–µ–∑–Ω—ã–π –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –æ—Ç–≤–µ—Ç."""
    
    # –ï—Å–ª–∏ –Ω–µ—Ç –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
    response = f"""–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å: "{user_message}"

–Ø - {assistant.name}, –∏ —è –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º. 

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å —è —Ä–∞–±–æ—Ç–∞—é –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π. 

–î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:
1. –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π
2. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã (FastAPI, Qdrant, Ollama)
3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é

–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —è —Å–º–æ–≥—É:
- –ò—Å–∫–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
- –î–∞–≤–∞—Ç—å —Ç–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏

–ü–æ–∫–∞ —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç–∞ –∏ –±–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª."""
    
    return response

with app.app_context():
    print("üß™ –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Ç–∞\n")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    user = User.query.filter_by(username='test_user').first()
    assistant = Application.query.filter_by(name='–ü–æ–º–æ—â–Ω–∏–∫ —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏').first()
    
    if not user or not assistant:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
        exit(1)
    
    print(f"‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
    print(f"‚úì –ü–æ–º–æ—â–Ω–∏–∫: {assistant.name}")
    print(f"  –¢–∏–ø: {assistant.assistant_type}")
    print(f"  –ú–æ–¥–µ–ª—å: {assistant.llm_model}")
    print(f"  –ü—É–±–ª–∏—á–Ω—ã–π: {'–î–∞' if assistant.is_public else '–ù–µ—Ç'}")
    
    # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –¥–∏–∞–ª–æ–≥
    conversation = Conversation.query.filter_by(
        assistant_id=assistant.id,
        user_id=user.id,
        status='active'
    ).first()
    
    if not conversation:
        conversation = Conversation(
            assistant_id=assistant.id,
            user_id=user.id,
            title="–¢–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–æ–≥",
            status='active'
        )
        db.session.add(conversation)
        db.session.commit()
        print(f"\n‚úì –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥ ID: {conversation.id}")
    else:
        print(f"\n‚úì –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –¥–∏–∞–ª–æ–≥ ID: {conversation.id}")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    test_messages = [
        "–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è?",
        "–ß—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏ –∑–∞–±—ã–ª –ø–∞—Ä–æ–ª—å?",
        "–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π?"
    ]
    
    print("\n" + "="*50)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–ò–ê–õ–û–ì–ê")
    print("="*50)
    
    for test_text in test_messages:
        print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_text}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_msg = Message(
            conversation_id=conversation.id,
            role='user',
            content=test_text
        )
        db.session.add(user_msg)
        db.session.commit()
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        response_text = simple_chat_response(assistant, test_text)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–º–æ—â–Ω–∏–∫–∞
        assistant_msg = Message(
            conversation_id=conversation.id,
            role='assistant',
            content=response_text
        )
        db.session.add(assistant_msg)
        db.session.commit()
        
        print(f"ü§ñ –ü–æ–º–æ—â–Ω–∏–∫: {response_text[:200]}...")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        conversation.update_statistics()
        assistant.increment_message_count()
    
    print("\n" + "="*50)
    print("–°–¢–ê–¢–ò–°–¢–ò–ö–ê")
    print("="*50)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    conversation = Conversation.query.get(conversation.id)
    print(f"–°–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–∏–∞–ª–æ–≥–µ: {conversation.message_count}")
    print(f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {conversation.last_message_at}")
    
    assistant = Application.query.get(assistant.id)
    print(f"–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–º–æ—â–Ω–∏–∫–∞: {assistant.total_messages}")
    print(f"–í—Å–µ–≥–æ –¥–∏–∞–ª–æ–≥–æ–≤: {assistant.total_conversations}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    print("\n" + "="*50)
    print("–ò–°–¢–û–†–ò–Ø –î–ò–ê–õ–û–ì–ê")
    print("="*50)
    
    messages = conversation.get_last_messages(10)
    for msg in messages:
        role_icon = "üë§" if msg.role == 'user' else "ü§ñ"
        print(f"{role_icon} [{msg.created_at.strftime('%H:%M')}] {msg.content[:100]}...")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    print("\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python wsgi.py")
    print("2. –ü–µ—Ä–µ–π—Ç–∏ –≤ /chat")
    print("3. –£–≤–∏–¥–µ—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ")